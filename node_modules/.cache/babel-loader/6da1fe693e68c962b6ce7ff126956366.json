{"ast":null,"code":"var _jsxFileName = \"/Users/piotrkotulski/Desktop/Projekty_Future_Collars/fiat_react_app/fiat_react_app/src/components/CurencyApp.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrencyApp = () => {\n  _s();\n\n  // wybrana wartosc (chosenAmount)\n  // wybrana walute (chosenCurrency)\n  const initChosenAmount = 1;\n  const initChosenCurrency = \"USD\";\n  const initCurrencies = [];\n  const [chosenAmount, setChosenAmount] = useState(initChosenAmount);\n  const [chosenCurrency, setChosenCurrency] = useState(initChosenCurrency);\n  const [currencies, setCurrencies] = useState(initCurrencies);\n  const NBP_API_URL = \"http://api.nbp.pl/api/exchangerates/tables/a/?format=json\";\n  useEffect(() => {\n    fetch(NBP_API_URL).then(response => response.json()).then(data => setCurrencies(data[0].rates)).catch(err => console.error(err));\n  }, []); // functions\n\n  const calculatedCurrency = () => {\n    var _currencies$find;\n\n    const chosenCurrencyValue = (_currencies$find = currencies.find(_ref => {\n      let {\n        code\n      } = _ref;\n      return code === chosenCurrency;\n    })) === null || _currencies$find === void 0 ? void 0 : _currencies$find.mid;\n    return (chosenAmount * chosenCurrencyValue).toFixed(4);\n  }; // events\n\n\n  const changeChosenAmount = e => setChosenAmount(e.target.value);\n\n  const changeChosenCurrency = e => setChosenCurrency(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PRZELICZNIK KURS\\xD3W WALUT \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sprawd\\u017A dzisiejsze kursy \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"values\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"values-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: changeChosenAmount,\n          value: chosenAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: changeChosenCurrency,\n          value: chosenCurrency,\n          children: currencies.map(_ref2 => {\n            let {\n              code\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: code,\n              children: code\n            }, code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"values-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: calculatedCurrency(),\n          className: \"amount2\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"currency2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PLN\",\n          children: \"PLN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CurrencyApp, \"kmZOqTfzfK0S8CkYD1qQPUtMA0E=\");\n\n_c = CurrencyApp;\nexport default CurrencyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyApp\");","map":{"version":3,"sources":["/Users/piotrkotulski/Desktop/Projekty_Future_Collars/fiat_react_app/fiat_react_app/src/components/CurencyApp.jsx"],"names":["useState","useEffect","CurrencyApp","initChosenAmount","initChosenCurrency","initCurrencies","chosenAmount","setChosenAmount","chosenCurrency","setChosenCurrency","currencies","setCurrencies","NBP_API_URL","fetch","then","response","json","data","rates","catch","err","console","error","calculatedCurrency","chosenCurrencyValue","find","code","mid","toFixed","changeChosenAmount","e","target","value","changeChosenCurrency","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\n\n\nconst CurrencyApp = () => {\n  // wybrana wartosc (chosenAmount)\n  // wybrana walute (chosenCurrency)\n  const initChosenAmount = 1;\n  const initChosenCurrency = \"USD\";\n  const initCurrencies = [];\n  const [chosenAmount, setChosenAmount] = useState(initChosenAmount);\n  const [chosenCurrency, setChosenCurrency] = useState(initChosenCurrency);\n  const [currencies, setCurrencies] = useState(initCurrencies);\n  const NBP_API_URL =\n    \"http://api.nbp.pl/api/exchangerates/tables/a/?format=json\";\n\n  useEffect(() => {\n    fetch(NBP_API_URL)\n      .then((response) => response.json())\n      .then((data) => setCurrencies(data[0].rates))\n      .catch((err) => console.error(err));\n  }, []);\n\n  // functions\n  const calculatedCurrency = () => {\n    const chosenCurrencyValue = currencies.find(\n      ({ code }) => code === chosenCurrency\n    )?.mid;\n    return (chosenAmount * chosenCurrencyValue).toFixed(4);\n  };\n\n  // events\n  const changeChosenAmount = (e) => setChosenAmount(e.target.value);\n  const changeChosenCurrency = (e) => setChosenCurrency(e.target.value);\n\n  return (\n    <div className=\"container\">\n      <h1>PRZELICZNIK KURSÓW WALUT </h1>\n        <p>Sprawdź dzisiejsze kursy </p>\n        <div className=\"values\">\n          <div className=\"values-left\">\n      <input type=\"number\" onChange={changeChosenAmount} value={chosenAmount} />\n      <select onChange={changeChosenCurrency} value={chosenCurrency}>\n        {currencies.map(({ code }) => (\n          <option key={code} value={code}>\n            {code}\n          </option>\n        ))}\n      </select>\n      </div>\n      <div className=\"values-right\">\n      <input type=\"number\" value={calculatedCurrency()} className=\"amount2\" disabled/>\n                <select id=\"currency2\"/><option value=\"PLN\">PLN</option>\n      </div>\n    </div>\n    </div>\n    \n  );\n};\n\nexport default CurrencyApp;"]},"metadata":{},"sourceType":"module"}